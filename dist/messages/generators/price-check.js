"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generatePriceCheckMessage = generatePriceCheckMessage;
const price_checker_1 = require("../../modules/price-checker");
function generateSingleDatePriceMessage(subscription, result) {
    let message = `‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n`;
    message += `${subscription.origin} ‚û°Ô∏è ${subscription.destination}\n`;
    message += `üìÖ –î–∞—Ç–∞: ${subscription.date}\n\n`;
    if (result.flightInfo) {
        message += `‚úàÔ∏è –†–µ–π—Å: ${result.flightInfo.originCode} ‚Üí ${result.flightInfo.destinationCode}\n\n`;
    }
    message += `üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${result.newPrice} USD\n`;
    if (result.oldPrice !== undefined) {
        message += `üí∞ –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Ü–µ–Ω–∞: ${result.oldPrice} USD\n`;
        if (result.priceChanged) {
            const priceDiff = Math.abs(result.oldPrice - result.newPrice);
            const percentDiff = Math.round((priceDiff / result.oldPrice) * 100);
            if (result.newPrice < result.oldPrice) {
                message += `üíπ –°–Ω–∏–∂–µ–Ω–∏–µ: ${priceDiff} USD (-${percentDiff}%)\n`;
                if (percentDiff >= 20) {
                    message += `\nüî• –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫—É –±–∏–ª–µ—Ç–æ–≤!\n`;
                }
            }
            else {
                message += `üìà –ü–æ–≤—ã—à–µ–Ω–∏–µ: ${priceDiff} USD (+${percentDiff}%)\n`;
            }
        }
        else {
            message += `‚è∏ –¶–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å\n`;
        }
    }
    return message;
}
function generatetDateRangePriceMessage(subscription, result) {
    let message = `‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n`;
    message += `${subscription.origin} ‚û°Ô∏è ${subscription.destination}\n`;
    message += `üìÖ –ü–µ—Ä–∏–æ–¥: ${subscription.startDate} - ${subscription.endDate}\n\n`;
    message += `üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${result.newPrice} USD\n`;
    if (result.oldPrice !== undefined) {
        message += `üí∞ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${result.oldPrice} USD\n`;
        if (result.priceChanged) {
            const priceDiff = Math.abs(result.oldPrice - result.newPrice);
            const percentDiff = Math.round((priceDiff / result.oldPrice) * 100);
            if (result.newPrice < result.oldPrice) {
                message += `üíπ –°–Ω–∏–∂–µ–Ω–∏–µ: ${priceDiff} USD (-${percentDiff}%)\n`;
                if (percentDiff >= 20) {
                    message += `\nüî• –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–∫—É–ø–∫—É –±–∏–ª–µ—Ç–æ–≤!\n`;
                }
            }
            else {
                message += `üìà –ü–æ–≤—ã—à–µ–Ω–∏–µ: ${priceDiff} USD (+${percentDiff}%)\n`;
            }
        }
        else {
            message += `‚è∏ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å\n`;
        }
    }
    if (result.bestDates && result.bestDates.length > 0) {
        message += `\nüìÖ –õ—É—á—à–∏–µ –¥–∞—Ç—ã:\n`;
        result.bestDates.forEach((item, index) => {
            message += `   ${index + 1}. ${item.date}`;
            if (item.originCode && item.destinationCode) {
                message += ` (${item.originCode} ‚Üí ${item.destinationCode})`;
            }
            message += `\n`;
        });
    }
    return message;
}
function generatePriceCheckMessage(subscription, result) {
    if (!result.success) {
        return `‚ùå –û—à–∏–±–∫–∞: ${result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ü–µ–Ω'}`;
    }
    if (subscription.dateType === 'single' && (0, price_checker_1.isSingleDateResult)(result)) {
        return generateSingleDatePriceMessage(subscription, result);
    }
    else if (subscription.dateType === 'range' && (0, price_checker_1.isDateRangeResult)(result)) {
        return generatetDateRangePriceMessage(subscription, result);
    }
    else {
        return '–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ';
    }
}
