"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSubscriptionStatusesMessage = void 0;
const generateSubscriptionStatusesMessage = (subscriptions) => {
    let message = '';
    if (subscriptions.length === 0) {
        message =
            'üîç –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subscribe, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É.';
    }
    else {
        message = 'üìã –í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã:\n\n';
        for (let index = 0; index < subscriptions.length; index++) {
            const sub = subscriptions[index];
            message += `${index + 1}. ${sub.origin} ‚û°Ô∏è ${sub.destination}\n`;
            if (sub.dateType === 'single') {
                message += `   üìÖ –î–∞—Ç–∞: ${sub.date}\n`;
            }
            else {
                message += `   üìÖ –ü–µ—Ä–∏–æ–¥: ${sub.startDate} - ${sub.endDate}\n`;
                if (sub.bestDates && sub.bestDates.length > 0) {
                    if (sub.bestDates.length === 1) {
                        message += `   üî• –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${sub.bestDates[0].date}\n`;
                    }
                    else {
                        message += `   üî• –õ—É—á—à–∏–µ –¥–∞—Ç—ã:\n`;
                        sub.bestDates.forEach((dateInfo, idx) => {
                            message += `      ${idx + 1}. ${dateInfo.date}\n`;
                        });
                    }
                }
                else if (sub.bestDate) {
                    message += `   üî• –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${sub.bestDate}\n`;
                }
            }
            if (sub.lastPrice) {
                message += `   üí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${sub.lastPrice} USD\n`;
            }
            else {
                message += `   üí∞ –¶–µ–Ω–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n`;
            }
            message += `   üîÑ /check_${sub.id} - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ü–µ–Ω—É\n`;
            message += `   üóë /remove_${sub.id} - –£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n\n`;
        }
    }
    return message;
};
exports.generateSubscriptionStatusesMessage = generateSubscriptionStatusesMessage;
