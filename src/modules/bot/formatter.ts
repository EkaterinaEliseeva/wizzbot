import { ISubscription } from "../subscription";
import { formatPriceChangeText } from "../price-checker";
import { IDatePriceInfo } from "../price-checker";

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–Ω–∏–∂–µ–Ω–∏–∏/–ø–æ–≤—ã—à–µ–Ω–∏–∏ —Ü–µ–Ω—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–∞—Ç—ã
 * @param subscription –ü–æ–¥–ø–∏—Å–∫–∞
 * @param newPrice –ù–æ–≤–∞—è —Ü–µ–Ω–∞
 * @param oldPrice –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞
 * @param flightInfo –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–π—Å–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞)
 * @returns –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
export function formatPriceAlertMessage(
  subscription: ISubscription,
  newPrice: number,
  oldPrice: number,
  flightInfo?: { originCode: string; destinationCode: string }
): string {
  const isDecrease = newPrice < oldPrice;
  
  let message = isDecrease 
    ? `‚úÖ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –±–∏–ª–µ—Ç—ã!\n\n`
    : `üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –±–∏–ª–µ—Ç—ã!\n\n`;
    
  message += `${subscription.origin} ‚û°Ô∏è ${subscription.destination}\n`;
  
  if (subscription.dateType === 'single') {
    message += `üìÖ –î–∞—Ç–∞: ${subscription.date}\n`;
  } else {
    message += `üìÖ –ü–µ—Ä–∏–æ–¥: ${subscription.startDate} - ${subscription.endDate}\n`;
    if (subscription.bestDate) {
      message += `üìÖ –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${subscription.bestDate}\n`;
    }
  }
  
  if (flightInfo) {
    message += `‚úàÔ∏è –†–µ–π—Å: ${flightInfo.originCode} ‚Üí ${flightInfo.destinationCode}\n`;
  }
  
  message += `\nüí∞ –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ${oldPrice} USD\n`;
  message += `üí∞ –ù–æ–≤–∞—è —Ü–µ–Ω–∞: ${newPrice} USD\n`;
  
  message += formatPriceChangeText(oldPrice, newPrice);
  
  return message;
}

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª—É—á—à–∏—Ö –¥–∞—Ç
 * @param subscription –ü–æ–¥–ø–∏—Å–∫–∞
 * @param bestDates –ú–∞—Å—Å–∏–≤ –ª—É—á—à–∏—Ö –¥–∞—Ç —Å —Ü–µ–Ω–∞–º–∏
 * @param oldPrice –ü—Ä–µ–¥—ã–¥—É—â–∞—è —Ü–µ–Ω–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
 * @param includeRouteInfo –í–∫–ª—é—á–∞—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ä—à—Ä—É—Ç–µ
 * @returns –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 */
export function formatBestDatesAlertMessage(
  subscription: ISubscription,
  bestDates: IDatePriceInfo[],
  oldPrice?: number,
  includeRouteInfo: boolean = true
): string {
  const newPrice = bestDates[0].price;
  const priceChanged = oldPrice !== undefined && oldPrice !== newPrice;
  
  let title;
  if (priceChanged) {
    title = newPrice < oldPrice!
      ? `‚úÖ –°–Ω–∏–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –±–∏–ª–µ—Ç—ã!`
      : `üìà –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –Ω–∞ –±–∏–ª–µ—Ç—ã!`;
  } else {
    title = `üìÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª—É—á—à–∏—Ö –¥–∞—Ç –¥–ª—è –ø–æ–µ–∑–¥–∫–∏!`;
  }
  
  let message = `${title}\n\n`;
  message += `${subscription.origin} ‚û°Ô∏è ${subscription.destination}\n`;
  message += `üìÖ –ü–µ—Ä–∏–æ–¥: ${subscription.startDate} - ${subscription.endDate}\n\n`;
  
  message += `üí∞ ${priceChanged ? '–ù–æ–≤–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞' : '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞'}: ${newPrice} USD\n`;
  
  if (priceChanged && oldPrice !== undefined) {
    message += `üí∞ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ${oldPrice} USD\n`;
    message += formatPriceChangeText(oldPrice, newPrice) + '\n';
  }
  
  if (bestDates.length === 1) {
    message += `\nüìÖ –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${bestDates[0].date}`;
    
    if (includeRouteInfo && bestDates[0].originCode && bestDates[0].destinationCode) {
      message += ` (${bestDates[0].originCode} ‚Üí ${bestDates[0].destinationCode})`;
    }
    
    message += `\n`;
  } else {
    message += `\nüìÖ –õ—É—á—à–∏–µ –¥–∞—Ç—ã (${bestDates.length}):\n`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 5 –¥–∞—Ç
    const displayDates = bestDates.slice(0, 5);
    displayDates.forEach((item, index) => {
      message += `   ${index + 1}. ${item.date}`;
      
      if (includeRouteInfo && item.originCode && item.destinationCode) {
        message += ` (${item.originCode} ‚Üí ${item.destinationCode})`;
      }
      
      message += `\n`;
    });
    
    if (bestDates.length > 5) {
      message += `   ... –∏ –µ—â—ë ${bestDates.length - 5} –¥–∞—Ç\n`;
    }
  }
  
  return message;
}

/**
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–µ—Ä–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–Ω—ã
 * @param subscription –ü–æ–¥–ø–∏—Å–∫–∞
 * @param price –¶–µ–Ω–∞
 * @param bestDates –õ—É—á—à–∏–µ –¥–∞—Ç—ã (–¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–∞—Ç)
 * @returns –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 */
export function formatFirstCheckMessage(
  subscription: ISubscription,
  price: number,
  bestDates?: IDatePriceInfo[]
): string {
  let message = `üîç –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω—ã –¥–ª—è –≤–∞—à–µ–π –ø–æ–¥–ø–∏—Å–∫–∏\n\n`;
  message += `${subscription.origin} ‚û°Ô∏è ${subscription.destination}\n`;
  
  if (subscription.dateType === 'single') {
    message += `üìÖ –î–∞—Ç–∞: ${subscription.date}\n`;
  } else {
    message += `üìÖ –ü–µ—Ä–∏–æ–¥: ${subscription.startDate} - ${subscription.endDate}\n`;
    
    if (bestDates && bestDates.length > 0) {
      if (bestDates.length === 1) {
        message += `üìÖ –õ—É—á—à–∞—è –¥–∞—Ç–∞: ${bestDates[0].date}`;
        
        if (bestDates[0].originCode && bestDates[0].destinationCode) {
          message += ` (${bestDates[0].originCode} ‚Üí ${bestDates[0].destinationCode})`;
        }
        
        message += `\n`;
      } else {
        message += `üìÖ –õ—É—á—à–∏–µ –¥–∞—Ç—ã:\n`;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º—É–º 3 –¥–∞—Ç—ã –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        const displayDates = bestDates.slice(0, 3);
        displayDates.forEach((item, index) => {
          message += `   ${index + 1}. ${item.date}`;
          
          if (item.originCode && item.destinationCode) {
            message += ` (${item.originCode} ‚Üí ${item.destinationCode})`;
          }
          
          message += `\n`;
        });
        
        if (bestDates.length > 3) {
          message += `   ... –∏ –µ—â—ë ${bestDates.length - 3}\n`;
        }
      }
    }
  }
  
  message += `\nüí∞ –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: ${price} USD\n`;
  message += `\n–í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã.`;
  
  return message;
}